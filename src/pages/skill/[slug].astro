---
import HeaderNav from "@/components/HeaderNav.astro";
import HeaderMeta from "@/components/HeaderMeta.astro";
import ScrollToTop from "@/components/ScrollToTop.astro";
import Footer from "@/components/Footer.astro";
import Meta from "@/components/Meta.astro";
import { SITE_TITLE, SITE_DESCRIPTION, ESO_API_URL, CDN_URL } from "@/consts";

const { slug } = Astro.params;

const query = new URLSearchParams();
query.set("pagination[pageSize]", "1");
query.set("pagination[page]", "1");
query.set("filters[slug][$eq]", slug!);

const response = await fetch(`${ESO_API_URL}/api/skills?${query}`);

const { data } = await response.json();

// 当请求 tooltip 的时候，返回 json 数据
if (Astro.request.headers.get("x-request-for") === "tooltip") {
  if (data == null || data.length === 0) {
    return new Response(JSON.stringify({}), {
      headers: {
        "content-type": "application/json",
      },
    });
  }

  const { attributes } = data[0];
  const description = attributes.description || "";
  const result = {
    name: attributes.name,
    nameEn: attributes.nameEn,
    icon: attributes.icon,
    target: attributes.target,
    cost: attributes.cost,
    skillTypeName: attributes.skillTypeName,
    morph: attributes.morph,
    baseName: attributes.baseName,
    radius: attributes.radius / 100,
    maxRange: attributes.maxRange / 100,
    duration: attributes.duration / 1000,
    castTime: attributes.castTime / 1000,
    description: description
      .split("\n")
      .filter(Boolean)
      .map((x: string) => `<p>${x}</p>`)
      .join("\n"),
    effectLines: attributes.effectLines,
  };

  return new Response(JSON.stringify(result), {
    headers: {
      "content-type": "application/json",
    },
  });
}

if (data == null || data.length === 0) {
  return Astro.redirect("/404");
}

const { attributes } = data[0];

const meta = [
  { name: "名称", content: attributes.name },
  { name: "英文", content: attributes.nameEn },
];
---

<html lang="zh-CN">
  <head>
    <HeaderMeta
      title={`${attributes.name} - 技能 - ${SITE_TITLE}`}
      description={SITE_DESCRIPTION}
    />
  </head>

  <body>
    <HeaderNav />
    <main class="max-w-screen-xl mx-auto grid grid-cols-1 md:grid-cols-4">
      <article class="p-6 md:col-span-3">
        <div
          class="overflow-hidden border border-gray-300/50 shadow sm:rounded-lg shadow-gray-100"
        >
          <div class="px-4 py-5 sm:px-6">
            <h3 class="text-lg font-medium leading-6 text-gray-900">
              {attributes.name}
            </h3>
            <p class="mt-1 max-w-2xl text-gray-500">
              {attributes.nameEn}
            </p>
          </div>
          <div class="border-t border-gray-200">
            <dl>
              <div
                class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6"
              >
                <dt class="font-medium text-gray-500">技能图标</dt>
                <dd class="mt-1 text-gray-900 sm:col-span-2 sm:mt-0">
                  <img width="32" height="32" alt="" src={attributes.icon} />
                </dd>
              </div>
              <div
                class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6"
              >
                <dt class="font-medium text-gray-500">技能类型</dt>
                <dd class="mt-1 text-gray-900 sm:col-span-2 sm:mt-0">
                  {attributes.skillType}
                </dd>
              </div>
              <div
                class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6"
              >
                <dt class="font-medium text-gray-500">技能线</dt>
                <dd class="mt-1 text-gray-900 sm:col-span-2 sm:mt-0">
                  {attributes.skillLine}
                </dd>
              </div>
            </dl>
          </div>
        </div>
      </article>

      <aside class="py-6 md:col-span-1">
        <Meta title="技能" meta={meta} />
      </aside>
    </main>
    <Footer />
    <ScrollToTop />
  </body>
</html>
